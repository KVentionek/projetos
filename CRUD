from datetime import datetime
from datetime import date


def dias_para_aniversario(nascimento):
    hoje = date.today()
    aniversario_este_ano = date(hoje.year, nascimento.month, nascimento.day)

    if aniversario_este_ano < hoje:
        aniversario_proximo_ano = date(hoje.year + 1, nascimento.month, nascimento.day)
        dias_faltantes = aniversario_proximo_ano - hoje
    else:
        dias_faltantes = aniversario_este_ano - hoje

    print(f"\nFaltam {dias_faltantes.days} dias para o aniversário.")


def recebe_cep_retorna_endereco(cep:str) -> list:
  import requests
  cep = cep.replace("-", "").replace(".", "").replace(" ", "")
  if len(cep) == 8:
      link = f'https://viacep.com.br/ws/{cep}/json/'
      requisicao = requests.get(link)
      dic_requisicao = requisicao.json()
      uf = dic_requisicao['uf']
      cidade = dic_requisicao['localidade']
      bairro = dic_requisicao['bairro']
      logradouro = dic_requisicao['logradouro']
      return([uf, cidade, bairro, logradouro])
  else:
      raise Exception('CEP Inválido')


def criar():
  registro = []
  nome = input('Informe seu nome completo: ').title()
  profissao = input('Informe sua profissão: ').capitalize()

  registro.append(nome)

  registro.append(profissao)

  data_nascimento = input('Informe a data de nascimento (dd/mm/yyyy): ')
  registro.append(nascimento(data_nascimento))

  telefone = input('Informe seu telefone para contato com DDD (apenas números): ')

  registro.append(tell(telefone))

  endereco = input('Informe seu cep (apenas números):')
  registro.append(recebe_cep_retorna_endereco(endereco))


  cadastro.append(registro)
  print('\nCadastro realizado com sucesso!')


def ler(elemento):
  for i in range (len(cadastro)):
    if elemento in cadastro[i][0] or elemento in cadastro[i][1]:

      print (f'\nNome: {cadastro[i][0]} \nProfissão: {cadastro[i][1]} \nData de nascimento: {cadastro[i][2]} \nTelefone: {cadastro[i][3]} \n\nEndereço: \nLugadouro: {cadastro[i][4][3] } \nBairro: {cadastro[i][4][2]} \nCidade: {cadastro[i][4][1]} \nEstado: {cadastro[i][4][0]}')
      nasceu = datetime.strptime(cadastro[i][2], '%d/%m/%Y').date()
      dias_para_aniversario(nasceu)
    else:
      print('Registro não encontrado!')


def atualizar(elemento) :
  for i in range (len(cadastro)):
    if elemento in cadastro[i][3]:
      print(f'\nAtualizando cadastro de {cadastro[i][0]}.')
      while True:
        print('-'*15)
        print('[1] Nome \n[2] Profissão \n[3] Data de nascimento \n[4] Telefone \n[5] Endereço \n[6] Sair')
        print('-'*15)
        dado = input('Selecione o número correspondente ao dado que desejada atualizar: ')

        if dado == '1':
          cadastro[i][0] = input('Informe o novo nome: ').title()
          print('\nDado atualizado com sucesso! \nDeseja continuar?')
          continue

        elif dado == '2':
          cadastro[i][1] = input('Informe a nova profissão: ').capitalize()
          print('\nDado atualizado com sucesso! \nDeseja continuar?')
          continue

        elif dado == "3":
          data_nascimento = input('Informe a data de nascimento (dd/mm/yyyy): ')
          cadastro[i][2] =  nascimento(data_nascimento)
          print('\nDado atualizado com sucesso! \nDeseja continuar?')
          continue

        elif dado == '4':
          telefone = input('infrme o novo número de telefone: ')
          cadastro[i][3] = tell(telefone)
          print('\nDado atualizado com sucesso! \nDeseja continuar?')
          continue

        elif dado == "5":
          endereco = input('infrme o novo cep (apenas números): ')
          cadastro[i][4] = recebe_cep_retorna_endereco(endereco)
          print('\nDado atualizado com sucesso! \nDeseja continuar?')

        elif dado == "6":
          break

        else:
          print('Opção inválida!')
          continue
    else:
      print('Registro não encontrado!')


def deletar(elemento):
  for i in range (len(cadastro)):
    if elemento in cadastro[i][3]:
      print(cadastro[i])
      cadastro.pop(i)
      print('\nRegistro removido com sucesso!')
      break
    else:
      print('Registro não encontrado!')


def nascimento(data):
  while len(data) != 10 :
    data=input('Data inválida! \nDigite novamente a data no formato dd/mm/yyy: ')
  dataf = (f'{data[0:2]}/{data[3:5]}/{data[6:10]}')
  return dataf


def tell(celular):

  celular = celular.replace("(", "").replace(")", "").replace("-", "").replace(" ", "")
  while True:

    celular = celular.replace("(", "").replace(")", "").replace("-", "").replace(" ", "")
    if len(celular)!=11:
      celular = input('Número inválido, tente novamente: ').strip()
    else:
      break

  contato = (f'({celular[0:2]}) {celular[2:7]}-{celular[7:]}')
  return contato


def menu():
  while True:

    print('-'*15)
    print('[1] Criar \n[2] Ler \n[3] Atualizar \n[4] Deletar \n[5] Sair')
    print('-'*15)

    opcao = input('Selecione o número correspondente à opção desejada: \n')

    if opcao == '1':
      criar()

    elif opcao =="2":
      dado = input('Informe o nome ou profissão do dado que deseja encontrar: ').title()
      ler(dado)

    elif opcao == '3':
      att = input('infrme o telefone de quem quer atualizar (apenas números): ')
      atualizar(tell(att))

    elif opcao == "4":
      remover = input('infrme o telefone de quem quer deletar (apenas números): ')
      deletar(tell(remover))

    elif opcao == "5":
      print('Programa finalizado!')
      break

    else:
      print('Opção inválida!')

menu()
